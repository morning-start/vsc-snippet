{
	// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// TODO 常用库
	"standard input-output library": {
		"prefix": "stdio",
		"body": [
			"#include <stdio.h>\n"
		]
	},
	"bool library": {
		"prefix": "stdbool",
		"body": [
			"#include <stdbool.h>\n"
		]
	},
	"math library": {
		"prefix": "math",
		"body": [
			"#include <math.h>\n"
		]
	},
	"char library": {
		"prefix": "ctype",
		"body": [
			"#include <ctype.h>\n"
		]
	},
	"string library": {
		"prefix": "string",
		"body": [
			"#include <string.h>\n"
		]
	},
	"standard library": {
		"prefix": "stdlib",
		"body": [
			"#include <stdlib.h>\n"
		]
	},
	"time library": {
		"prefix": "time",
		"body": [
			"#include <time.h>\n"
		]
	},
	// TODO 函数
	"main function": {
		"prefix": "main",
		"body": [
			"int main(int argc, char const *argv[])",
			"{",
			"    $0",
			"    return 0;",
			"}"
		]
	},
	"func": {
		"prefix": "func",
		"body": [
			"${1:int} ${2:func}($3)",
			"{",
			"    $1 res;",
			"    $0",
			"    return res;",
			"}"
		],
		"description": "标准函数模板"
	},
	"void function": {
		"prefix": "func_void",
		"body": [
			"void ${1:func}($2)",
			"{",
			"    $0",
			"}"
		],
		"description": "以void为返回的函数"
	},
	"int function": {
		"prefix": "func_int",
		"body": [
			"int ${1:func}($2)",
			"{",
			"    $0",
			"    return 0;",
			"}"
		],
		"description": "以int为返回的函数"
	},
	"float function": {
		"prefix": "func_float",
		"body": [
			"float ${1:func}($2)",
			"{",
			"    $0",
			"    return 0.0f;",
			"}"
		],
		"description": "以float为返回的函数"
	},
	"double function": {
		"prefix": "func_double",
		"body": [
			"double ${1:func}($2)",
			"{",
			"    $0",
			"    return 0.0;",
			"}"
		],
		"description": "以double为返回的函数"
	},
	"char function": {
		"prefix": "func_char",
		"body": [
			"char ${1:func}($2)",
			"{",
			"    $0",
			"    return '';",
			"}"
		],
		"description": "以char为返回的函数"
	},
	// TODO 结构体
	"for loop": {
		"prefix": "for",
		"body": [
			"for (${1:int} ${2|i,j,k|}=${3:0}; $2${4:<n}; $2${5:++})",
			"{",
			"    $6",
			"}"
		],
		"description": ""
	},
	"forr loop": {
		"prefix": "forr",
		"body": [
			"for (${1:int} ${2|i,j,k|}=${3:n-1}; $2${4:>=0}; $2${5:--})"
		]
	},
	"while loop": {
		"prefix": "while",
		"body": [
			"while ($1)",
			"{",
			"    $2",
			"}"
		]
	},
	"do-while loop": {
		"prefix": [
			"do",
			"while",
			"do-while"
		],
		"body": [
			"do",
			"{",
			"    $1",
			"} while ($2);"
		]
	},
	"goto": {
		"prefix": "goto",
		"body": [
			"goto ${1:flag};",
			"out ${1:flag}"
		]
	},
	// 数组函数
	"print array function": {
		"prefix": "print_arr",
		"body": [
			"void print_arr(${1:int} arr[], int arr_length)",
			"{",
			"    printf(\"[\");",
			"    for (int i = 0; i < arr_length; i++)",
			"    {",
			"        printf(\"%d \", arr[i]);",
			"    }",
			"    printf(\"\\b]\\n\");",
			"}"
		],
		"description": "打印数组的函数"
	},
	"length of array function": {
		"prefix": "len_arr",
		"body": [
			"int len_arr(${1:int} arr[])",
			"{",
			"    return sizeof(arr)/sizeof(arr[0])",
			"}"
		]
	},
	"length": {
		"prefix": "len",
		"body": "int ${0:len} = sizeof(${1:arr}) / sizeof($1[0]);"
	}
}